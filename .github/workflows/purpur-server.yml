name: Minecraft Purpur Server mit Playit Plugin, OP und Repo-Sync (sicher)

on:
  workflow_dispatch:

permissions:
  contents: write   # erlaubt github-actions, ins Repo zu pushen

jobs:
  start-server:
    runs-on: ubuntu-latest

    steps:
      # 1. Repository auschecken
      - uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Java 21 installieren
      - name: Setup Java 21
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version: 21

      # 3. RAM-Verfügbarkeit prüfen
      - name: Check available RAM
        run: |
          echo "=== RAM Info ==="
          free -h

      # 4. Hilfsdatei: .gitignore für Lock-Files
      - name: Setup .gitignore for volatile files
        run: |
          cat >> $GITHUB_WORKSPACE/.gitignore <<EOL
          minecraft_server/world/session.lock
          minecraft_server/world_nether/session.lock
          minecraft_server/world_the_end/session.lock
          EOL

      # 5. Minecraft Server starten (max 15 GB RAM) im Hintergrund
      - name: Start Minecraft Server
        run: |
          cd $GITHUB_WORKSPACE/minecraft_server
          java -Xmx15G -Xms1G -jar purpur.jar nogui &
          echo $! > server.pid

      # 6. Kontinuierlich Welt sichern & ins Repo pushen
      - name: Continuous backup loop
        run: |
          while kill -0 $(cat minecraft_server/server.pid) 2>/dev/null; do
            echo "=== Backup Loop ==="

            # Welt kopieren (sauber)
            rsync -a --delete minecraft_server/world/ backup_world/world/
            rsync -a --delete minecraft_server/world_nether/ backup_world/world_nether/
            rsync -a --delete minecraft_server/world_the_end/ backup_world/world_the_end/

            # Push ins Repo erzwingen
            cd $GITHUB_WORKSPACE
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git add backup_world || true
            git commit -m "Auto-backup world $(date)" || true
            git push --force || true

            cd $GITHUB_WORKSPACE
            sleep 60   # jede Minute sichern
          done
